iTruth about blockchain|There are many misleading stories about blockchain. Much of the stories are about cryptocurrencies that led to incredible wealth or nightmare losses, or form the basis for a new financial system that supports dark markets for weapons or drugs. Blockchain is also considered a technology with enormous energy requirements. The variety of design and application possibilities of this technology and the opportunities thvat result from it are omitted from these stories.
Blockchain demystified: Distributed data management.|This course explains blockchain beyond this garish and sensational image. Blockchain is above all a technology for distributed, flexible and individualized data management. Essentially, the data refers to participants, documents and transactions that change the status and characteristics of the participants or the things described in the documents.
Blockchain: Grouped distributed consensus technology.|Strictly speaking, blockchain and distributed technology is less a technology itself, but rather a technology group that can be characterized, at least from an algorithmic point of view, via a protocol of chaining, distribution, and consensus. The basic principles have been known for a long time and have also been used in the context of public data security.
Decentralized chain of linked blocks.|A blockchain is initially a chain of blocks. These blocks, in which transactions are stored, are linked together. The storage location is the so-called ledger (account book or journal, which is known from accounting). Blockchains are stored decentrally in a peer-to-peer (P2P) network. A ledger is therefore a kind of distributed account book for the permanent and tamper-proof storage of transaction data. Each computer on the distributed P2P network maintains a copy of this account book to avoid a single point of failure (SPOF). All copies of the blockchain are updated and validated at the same time.
Information on transactions and participants.|Transaction data is information about transactions. They usually refer to the time of the transaction, the participants executing or affecting the transaction, and the things or assets to which the transaction relates. A transaction can be considered as a sequence of an exchange of information for a specific purpose (e.g. sale of a bond). The exchange of information is considered a closed unit. Transaction data can be financial, logistical, or production-related in nature and can relate to a purchase, delivery status, hours worked, insurance premium, or claim.
Mapped transaction data in blockchain-ledger.|Transaction data related to a specific item, document, or asset is mapped in a blockchain, which in turn is stored in a ledger along with all other blockchains. A document can be a patient file, the presentation of a claim, a certificate of completion or a certificate. The documents can also describe assets, such as land, holdings or cars. But they can also refer to goods or services.
Central data management: basics|Centralized and decentralized data managing. Central data management. In central systems, the components are arranged around a central component and connected to it. In contrast, the components of distributed systems form a network of connected components without having central elements of coordination or control. Centralized databases have been used by organizations for many years to store customer data and transaction records of one type or another, among other things.
Central data management: control and privileges|There are carefully monitored and closed systems in which only privileged users are allowed to make entries. For example, when a customer transfers money from one bank account to another, they ask the bank to do so on their behalf instead of dealing directly with the bank's transaction system. Centralization is associated with the paradigm of central control. This has other implications. A central system is a system that, by definition, has a critical source of failure. It also implies a concentration of power when some privileged users have the prerogative to manipulate transactions, for example, for unilaterally canceling a transaction or charging fees.
Central data management: risk of SPOF|Central data management carries the risk of single point of failure (SPOF). A SPOF is generally a potential risk arising from an error in the design, implementation, or configuration of a system, where this error or malfunction causes the overall system to become functional. In an IT environment, a single point of failure can thwart the availability of IT services. Imagine an IT environment in which a single server runs a specific application. If the server were to fail, all services accessing this application would also fail or at least behave unstable.
Central data management: server failure|The loss of data can also result from the server failure. If a SPOF poses a serious threat, a second (or even third) server is often deployed that can mirror the services of the first server and take on its role in the event of a failure.
Decentralized data management: advantages|Advantages of distributed systems  over single and powerful computers (which are necessary for central systems): Higher computing power: The computing power of a distributed system results from the combination of the computing power of all connected computers. Therefore, distributed systems usually have more computing power than any individual computer. Cost reduction: The cost of creating, maintaining, and operating a central supercomputer is much higher than the cost  of creating, maintaining, and operating a distributed system.
Decentralized data management: further advantages|In particular, the replacement of individual computers of a distributed system can be done without significant effects on the overall system. Higher reliability: A distributed system  does not have a single point of failure. The reliability of a distributed system is based on the fact that the entire computer network can continue to work even in the event of a crash of individual computers. The ability to grow naturally. The computing power of a distributed system results from the aggregated computing power of its components.
Decentralized data management: disadvantages|An increase in computer performance is possible by connecting additional computers to the system. The disadvantages of distributed systems compared to central individual computers are: Coordination effort: Distributed systems do not have central entities that coordinate their members. Coordination must be carried out by the members of the system themselves. Communication effort: Coordination requires communication. Computers that form a distributed system must communicate with each other. 
Decentralized data management: further disadvantages|This requires the presence of acommunication protocol, as well as the sending, receiving, and processing of messages.  Security issues: Sending data over a network implies security concerns, as untrusted users may misuse the network to access and use data without authorization. The less restricted access to the network over which the distributed nodes communicate, the higher the security concerns for the distributed system. Decentralized communication with equal nodes.
Peer-to-peer systems: basics|Peer-to-peer systems are a special kind of distributed systems. They consist of individual. computers that make their computing resources directly available to all other members of the network without a central coordination point. When joining a peer-to-peer system, users turn their computers into node computers of the system that are the same in terms of their rights and roles. All nodes in the system have the same functionality and responsibility. All users' computers are both providers and consumers of resources.
Decentralized communication vs. client-server model|A peer-to-peer network is a decentralized communication model in which each node on the network has the same capabilities and can establish communication with all other nodes. Unlike the client-server model, where the client sends a request to a server that is implemented by it, in the P2P network each node can assume the role of client or server. P2P systems can be used to provide anonymized routing of data traffic, parallel computing environments, distributed data storage and other functions. P2P has historically gained notoriety through the sharing of movies, music, digital books and other media.
Anonymized routing|P2P systems can be used to provide anonymized routing of data traffic, parallel computing environments, distributed data storage and other functions. P2P has historically gained notoriety through the sharing of movies, music, digital books and other media. It is, therefore, often associated with software piracy and copyright infringement.
User control in peer-to-peer networks.|As a rule, peer-to-peer applications allow their users to control many parameters: How many node connections should be searched for or allowed at the same time, which systems should the network connect to and which should not, which services should be offered and how many system resources should be made available for the network. Some nodes may limit themselves to simply connecting to a subset of active nodes on the network. In principle, however, there is little user control in P2P networks.
Benefits of peer-to-peer networks|The decentralized structure of the blockchain, unlike traditional centralized approaches, brings with it several important features: Transparency: It is possible for anyone to track the movement of funds from one account to another. Immutability: Once confirmed, a transaction cannot be undone. Low cost: Transaction fees are minimal.
Further benefits of peer-to-peer networks|Cross-border: Funds or assets can be sent to someone on the other side of the globe as easily as to someone in the next room. Speed: Due to the flat and transparent structure of the blockchain, transfers are displayed almost immediately and usually confirmed in minutes instead of hours or days.
Distributed ledger: basics|Ledgers or account books have been around for a long, long time. In the past, of course, they were only available in paper form. With increasing digitalization, the account books are managed digitally. Traditionally, a central authority has been responsible and responsible for validating ledger entries. For example, banks are required to review financial transactions. However, the original form of the ledger still serves as a metaphor for the secure storage of transaction data. Computerized ledgers usually mirror what once existed on paper.
Distributed ledgers: Advanced, decentralized recording.|Now, the technology of the 21st century has taken the next step with cryptography, advanced algorithms, stronger and almost universally available computing power to make the distributed attitude of ledgers a more viable form of recording. Unlike traditional databases, distributed ledgers have neither a central data store nor centralized management functions. In a distributed ledger (or ledger), each node processes and verifies each entry, generating a record for each entry, and seeking consensus on the accuracy of that entry.
Efficient, secure, transparent distributed ledgers.|Distributed ledger technologies have the potential to speed up transactions by eliminating the need for a central instance. Similarly, distributed ledgers have the potential to reduce costs per transaction. Experts also believe that distributed ledger technology is much more secure because each node of the network contains records, creating a system that is more difficult to manipulate or successfully attack. Many also view a distributed ledger as a much more transparent way of sharing shared data and information and observing it together across a network, which also makes a successful cyberattack less likely.
Blockchain - summary|In summary, it can be said: 1· A blockchain or distributed ledger is a new way to store and transmit information. 2· In the simplest case, the blockchain is a digital record stored on a network of computers (possibly even worldwide). 3· Instead of securing information by restricting access, the blockchain shares information among all users. 4· Ownership of assets, for example, is cryptographically verified and the full transparency and shared ownership of the system (among all users) means that a bad actor is immediately recognizable as such and all transactions transmitted by such a node are ignored.
Blockchain and its processes|Transaction: Two parties decide to exchange a thing (property, certificate, etc.). Block: The transaction is packaged with other pending transactions creating a „block“. The block is sent to the blockchain network of participating computers.  Verification: The participating computers (called “miners” in the Bitcoin world) determine whether the transactions are valid. If a majority of computers declare the transactions valid, they are considered valid and a “consensus” among the participants has been reached. Blockchain and its processes (continued) Hash: Each verified block of transactions is time-stamped with a cryptographic hash. Each block holds a reference to the previous block’s hash value. This results in a chain of blocks that can hardly be tampered. Execution: The unit of value moves from the account of one party to the account of the other party.
Two types of records|A blockchain ledger consists of two types of records, individual transactions and blocks. The first block consists of a header and data related to transactions that take place within a specified period of time. The block's timestamp is used to create an alphanumeric string called a hash (a type of unique fingerprint of the transaction).
Hash-based consensus verifies blockchain integrity.|After the first block is created, each subsequent block in the ledger uses the hash of the previous block to calculate its own hash. Before a new block can be added to the blockchain, its authenticity must be verified through a calculation process called validation or consensus. At this point in the blockchain process, much of the nodes on the network must agree and confirm that the hash of the new block has been calculated correctly. Consensus ensures that all copies of the distributed ledger use the same state.
Immutable blocks maintain blockchain integrity.|After a block is added, it can be referenced in subsequent blocks, but cannot be changed. When someone tries to exchange a block or change information stored in it, the hashes for previous and subsequent blocks also change and change the shared state of the blockchain. When consensus is no longer possible, all other nodes on the network are aware that a problem has occurred, and no new blocks are added to the blockchain until the problem is resolved. Typically, the block that caused the problems is discarded and the consensus process is repeated.
Cryprocurrencies - in a few words|A cryptocurrency is a digital medium of exchange that uses encryption to secure the processes implemented in generating money and conducting money transactions. Cryptocurrencies are a subset of digital currencies and therefore have no physical representation. You can't put them in your wallet. They can be used for digital transactions with all business partners who accept them. Transactions with cryptocurrencies are usually carried out through mobile payment from a digital wallet. There are numerous cryptocurrencies around the world. Among them, Bitcoin is the most prominent example.
Altcoins and Bitcoin-to-Bitcoin transactions|In fact, other cryptocurrencies are sometimes referred to as altcoins, alternatives toBitcoin. The Bitcoin protocol enables P2P exchanges in a decentralized system that, unlike traditional currencies, is not associated with a financial institution or government. Bitcoin-to-Bitcoin transactions are made via anonymous, strongly encrypted hash codes on a peer-to-peer network. Each user's digital wallet contains their bitcoins. The wallet also stores all the addresses to which the user sends bitcoin and from which he receives bitcoins, along with a private key known only to the user. The P2P network monitors and verifies the Bitcoin transfers.
Cryptocurrency skepticism impacts blockchain perception.|Due to the positioning of Bitcoin outside the control of state and financial authorities and its potential for abuse as an instrument of fraud, money laundering and other illegal activities, as well as other concerns such as its volatility and the unregulated nature of the exchanges on which Bitcoin is traded, cryptocurrencies are viewed with particular skepticism and concern. This image often rubs off on blockchain technology in general.
Public or private blockchain|Blockchain platforms can be designed either as a public blockchain (without access authorization, permissionless) or private blockchain (with explicit access authorization, permissioned). In a public, permissionless blockchain like Bitcoin, any node on the network (without prior authentication) can transact and participate in the consensus process. In a private blockchain with access authorization, any node can execute transactions, but participation in the consensus process is limited to a limited number of verified nodes.
Consensus and validation in the blockchain|Choosing the consensus algorithm to use is perhaps the most important aspect when choosing a blockchain platform. There are five standard methods to reach consensus. In general, public platforms choose algorithms such as Proof of Work because they require a lot of computing power for computation and are easy to verify for the network nodes involved. Proof-of-Work (PoW). Practical Byzantine Fault Tolerance Algorithm (PBFT). Proof-of-Stake (PoS). Proof-of-Authority (PoA). Proof-of-Honesty (PoH)
Diverse industries explore blockchain applications|The areas of application are manifold and can certainly not be described conclusively here. Much of the early interest in blockchain technology arose around its application in financial transactions. This is understandable when you consider that the cryptocurrency Bitcoin has been used worldwide, proving that blockchain technology can actually work. Banks and other financially relevant institutions have also become early innovators in this area. Other industries, including healthcare, the public sector, agriculture, energy, and many more, are exploring how they can use blockchain to enable the secure exchange of data such as personal health information, digital assets, or real estate data.
Blockchain enables secure supply chains and document exchange|Manufacturing companies and other similar companies also see some potential to use blockchain to manage smart contracts and track materials as they move through their supply chains. Experts believe that blockchain can be used in tax collection, asset transfers, distribution of social benefits, and even voting procedures such as elections. Blockchain can also be used to exchange legal and similar documents such as certificates, testimonials and proofs.
Empowering individuals through decentralized control|Some believe that individuals can use this technology to have better control over personal information and then selectively share parts of their data when necessary; Use cases here include individual medical records and corporate supply chains. In addition, proponents also say blockchains can help better track intellectual property rights and property for art, assets, music, film, and more. Blockchain offers a radically different approach. It firmly manifests the feasibility of peer-to-peer communication over the Internet without the need for a trusted intermediary.
Efficient, secure business transactions with trust|For a company, blockchain offers the following basic possibilities: A design approach that keeps transaction data, value, and status inherently close to business logic. The necessary data schemas for transactional data are easier to manage. Secure execution of business transactions validated by the community of all network users, in a secure process that enables the trust and robust transaction processing that are fundamental to blockchain.
Controlled access authorization for compliance|Access via access authorization as an alternative to uncontrolled access without authorization check, which may meet existing regulations in the company.
Blockchain: Enhanced security and resilience|Experts cite several important benefits for using blockchain. Security is considered one of the main advantages of this technology. It is almost impossible to manipulate a blockchain because information from thousands, even millions of computers, is shared and constantly compared with each other. In addition, blockchain does not have a singular point of failure. If one node fails, this is not a problem because all other nodes have a copy of the ledger. Whether blockchain will revolutionize the way public administration, institutions and industries work is an open question.
Blockchain reliability under scrutiny, diverse applications|Articles in the press have questioned whether blockchain technologies, as they exist now, are sufficiently reliable to deploy on a large scale. Topics include the lack of regulations for this new form of exchange and safety concerns. Blockchains are usually associated with digital currencies such as Bitcoin or alternative versions. However, the fact is that blockchain applications are being researched in many industries as a secure and cost-effective way to create and manage a distributed database and maintain records for digital transactions of all kinds.
Blockchain advantages: Revision, integration, control support|The advantages  of blockchain can be summarized as follows: Revision: Blockchains log transactions, thus establishing regulations for the purpose of non-repudiation, root cause analysis, fraud analysis, etc. Process integration with existing systems: Blockchains ensure that the blockchain solution supports existing systems such as CRM, business intelligence, reporting and analytics, etc. Control: Blockchains support capacity planning (for the network), fraud and error detection.
Blockchain benefits: Reporting, auditing, trust, and efficiency|Reporting and Auditing: Authentication, authorization, and auditing requirements. In a corporate world with access verification, all participants of the blockchain network should be able to be identified and tracked. Their role must be defined if they are to take on certain roles in the blockchain context. Overall, blockchain technology can support a number of models around the handling of business processes by promoting faster settlement, transparency through digitization, symmetrical dissemination of information in supply chains, and the creation of ad hoc trust even between Internet of Things (IoT) services.
Bitcoin drawbacks: Lack of control, technical limitations|Among the many disadvantages of Bitcoin (comparatively slow confirmation times, regular attacks, high energy consumption, etc.), the lack of control over updates and changes to the network and the difficulty of adapting the existing Bitcoin technology to individual needs. For this reason, many organizations prefer to create their own, private blockchain systems with access control. On a technical level, a blockchain can be defined as an immutable ledger or ledger for recording transactions managed in a distributed network of untrusted partners.
Consensus ensures data consistency and integrity|Each peer keeps a copy of the ledger. The peers run a consensus log to validate transactions, group them into blocks, and create a hash chain over the blocks. This process is necessary to ensure the consistency and integrity of the data.
The Ledger|This chapter describes the central element of blockchain technology: the ledger or, to German, the ledger. It explains the architecture of the ledger and the functions and mechanisms for the forgery-proof storage of transaction data.
Blockchain: Cryptographic proof and user anonymity.|The original goal of the blockchain was to support electronic payment systems based on cryptographic proof rather than trust. This basis remains in place, while the diversity of scopes has increased considerably. The primary goal of blockchain is to ensure the anonymity of its users. This is achieved by using a public/private key pair. Each participant is identified by the public key, and authentication (of transactions, for example) is done by signing with the private key.
Blockchain ledger: Immutable transaction log.|The concept of the ledger has its origins in double-entry bookkeeping, where each posting on one account requires a corresponding and opposite posting on another account. This helps to detect errors. In the context of blockchain, a ledger is an indelible log of transactions that take place between different participants. A ledger records which transaction took place (Participant A has transferred asset X to participant B) and in what order these transactions took place (Participant A transfers asset X to participant B. Subsequently, participant B transfers amount Y of a currency to participant A).
Immutable and secure ledgers for all participants.|The ledgers are accessible to all participants registered on a particular network (private blockchain), or to the public as a whole (public blockchain). Ledgers are tamper-proof:  no participant can add, delete or change ledger entries once saved. The management of the ledger must be immune to attacks to ensure that the ledger remains secure even if some participants inadvertently or intentionally behave maliciously.
Blockchain: Integrity and trust reinforcement.|Maintaining integrity and trust in distributed systems is the main purpose of blockchain. In the context of software systems, integrity is the property of a system to be secure, complete, consistent, correct, and free from manipulation and error.  Trust is the firm belief in the reliability, correctness, or ability of someone or something without having to provide evidence. People will remain loyal toa system if they trust it and if the results of day-to-day interactions with the system confirm and strengthen their trust. Integrity is required to meet users' expectations and strengthen their trust in the system.
Integrity in distributed systems: Peer knowledge and trust.|Achieving and maintaining integrity in purely distributed systems such as blockchains depends on many factors. The two most important are: Knowledge of the number of peers. Knowledge of the trustworthiness of peers. The chances of integrity in a distributed peer-to-peer system are higher if the number of members and their trustworthiness are known (similar to a private club). In a purely distributed peer-to-peer system on the Internet, accessible to everyone, the number of peers and their trustworthiness is inherently unknown.
Integrity threats in peer-to-peer systems: Technical failures and malicious actors.|The two most important integrity threats in peer-to-peer systems are technical failures and members with malicious intent. Dishonest and malicious actors pose the greatest threat to the peer-to-peer system because they attack the foundation on which a peer-to-peer system is based: trust. As soon as users can no longer trust each other, they turn away and leave the system. Achieving integrity and trust is the challenge that blockchain technology faces.
The Byzantine Generals Problem: Achieving Integrity and Trust in Distributed Systems|The problem of achieving and maintaining integrity and trust in a system consisting of an unknown number of members with unknown trustworthiness is well known and widely used in computer science. It is called the problem of Byzantine generals.
The Byzantine Error: Consensus in the Face of Betrayal|In the siege of a city, several generals have a communication problem. Because of the strong fortification, it is necessary for the generals with their troops to attack the city simultaneously from different directions. The generals can communicate with each other via messengers. However, some of the generals intrigue against others. Their goal is to discredit their competitors – for example, by trying to drive the others to a premature attack through cleverly spread misinformation. None of the generals now know what information is authentic and who they can trust. It is therefore a problem of agreement, which consists in the fact that the commanders must decide unanimously whether to attack or not.
The Byzantine Error: Overcoming Betrayal and the Limits of Classical Communication|The problem is complicated by the spatial separation of the commanders; so, they have to send messengers back and forth. There is also the possibility that there may be traitors among the generals who can deliberately send misleading information to the other generals. Mathematically, it turned out that the loyal generals only have a chance of reaching an agreement under these conditions if the proportion of the schemers is less than a third. Thus, there was no solution, especially for three generals, one of whom is a schemer – at least not with the help of classical communication methods such as messengers.
The Byzantine Generals Problem: Consensus in the Face of Betrayal|In the siege of a city, several generals have a communication problem. Because of the strong fortification, it is necessary for the generals with their troops to attack the city simultaneously from different directions. The generals can communicate with each other via messengers. However, some of the generals intrigue against others. Their goal is to discredit their competitors – for example, by trying to drive the others to a premature attack through cleverly spread misinformation. None of the generals now know what information is authentic and who they can trust. It is therefore a problem of agreement, which consists in the fact that the commanders must decide unanimously whether to attack or not.
Blockchain: Revolutionizing Proof of Ownership and Property Management|Integrity and trust are one challenge that the blockchain has to face, the other is the management of property. Proof of ownership includes three elements: Identification of the owner. Identification of the object of which it is the owner. Assignment of the owner to the object. In real life, we use passports, testimonials, birth certificates, serial numbers, and even testimonies to obtain these three elements as evidence. Usually this takes some time.
Blockchain: Transforming Proof of Ownership and Property Management through Immutable Ledgers|The assignment between owners and objects is usually done via a general ledger or register. A ledger  is a concrete implementation of an assignment between owners  and property. Proof of ownership requires the identification of owners and property, as well as the assignment between owners and property. The use of the property requires identification as well as authentication and authorization to ensure that only the legitimate person  legally owns the property.
The Three Pillars of Secure Access: Identification, Authentication, and Authorization|Identification means identifying oneself as a specific person. Authentication means proving that this person is really the one you are working for. Authorization means being able to access something because of the previously authenticated identity.
Double Spending and the Challenge of Consistency in Distributed Peer-to-Peer Systems|Double spending is one of the most important examples of integrity breaches in distributed peer-to-peer systems. After transferring ownership from one person to another, all ledgers of the system must be updated so that the latest version reflects the new reality.  However, sharing information between members in the blockchain system and updating individual ledgers will take time. Some members already know about the last transfer of ownership, while others have not yet received this information. At this point, the system is not consistent.  
The Problem of Double Spending: Counterfeiting in the Digital Realm|Only one of them should be the new and rightful owner. Therefore, the situation is called the problem of double spending. In the context of copying digital goods, the problem of double spending refers to the fact that data can be copied on a computer without significant restrictions. Copying a representation of a unique real object (house, money, cars, etc.) is the digital equivalent of counterfeiting banknotes with a photocopier.
Solving the Double Spending Problem: Blockchain's Integrity Solution|The problem of double spending is an important example of the violation of integrity in distributed peer-to-peer systems of ledgers that   blockchain technology has to solve.
Managing Ownership and Transactions: Blockchain's Tasks in a Peer-to-Peer Environment|Blockchain is software that manages ownership and possession in a purely distributed peer-to-peer system of ledgers, which in turn operates in an open and untrustworthy environment. Blockchain must therefore cope with seven main tasks: Capturing the Transfer of Ownership: Transactions are a good way to describe property transfers. The complete history of transactions is the key to identifying the current owners.
Ensuring Property Protection and Secure Transaction Storage in Blockchain Systems|Property protection has three main elements: identifying and authenticating owners, and restricting access to property to its rightful owners. Storing transaction data. The transaction history is used to clarify ownership. Since transaction history is the core element in the clarification of ownership, it must be stored in a secure manner.
Design Considerations for Immutable and Distributed Ledgers in Untrusted Environments|Design of ledgers for distributed and untrusted environments. The best way to prevent the transaction history from being changed is to make it immutable. This means that the ledger and thus the transaction history can no longer be changed after writing. At the same time, however, it must be able to add new transactions. Distributing the ledgers. Interaction between the members (or nodes) and control of the information is shared between all members.
Ensuring Consensus and Truth in Blockchain Ledgers: Conflict Resolution and Majority Agreement|Add a new transaction to the ledgers. All members of the peer-to-peer system can add new data, while at the same time each member of the peer-to-peer system acts as the supervisor of all members. Decide which ledger represent the truth. Avoiding conflicts between transaction histories is a serious threat to the integrity of the system. The blockchain must decide which transaction history is the truth. It solves the problem by having each node in the peer-to-peer system decide which transaction history is the true one, and the majority of members independently agree to that decision.
Ensuring Transparency and Traceability: Documenting Property Transfer and History|The aim is a transparent and comprehensible documentation of the property. This includes the following aspects: Description of the transfer of ownership. Maintaining transfer history
Recording Ownership Transfer: Account Creation and Transaction Details|Description of the transfer of ownership. A transaction is the transfer of ownership from one owner to another. The act of transfer of ownership is documented with the following facts: Creation of the owner's account. Name of the account to which ownership is to be transferred. Quantity and scope of the property to be transferred.
Key Elements of Ownership Transfer: Timing, Fees, and Consent Verification|The time at which the transaction is to be executed. Optional: A fee payable to the system for executing the transaction. Proof that the owner of the account who hands over ownership actually consents to this transfer.
Transaction History: The Key to Comprehensive Ownership Documentation|Transaction history management. Because the transaction data contains all the information about the account that hands over ownership, the account that receives the property, as well as the item and amount to be transferred, ownership information can be reconstructed for each account as long as the entire transaction history is available. As a result, the entire history of all transaction data is sufficient to document ownership
Preserving Integrity: The Role of Transaction History in Ownership Documentation|The complete history of transaction data is a process chain that provides information about how people acquired and transferred ownership. Any transaction that is not part of this history is considered as if it never happened. A transaction is executed by adding it to the history of the transaction data. The order in which transaction data is added to the history must be preserved. Only transaction data that meets the following three criteria are added to the Blockchain: Formal correctness. Semantic correctness. Authorization
Ensuring Correctness: Formal and Semantic Criteria in Transaction Processing|Formal correctness: The description of a transaction contains all the necessary data and this data is provided in the correct format. Semantic correctness: It focuses on the statement of transaction data and its intended effect. Semantic correctness is often based on business rules, for example: Ensure that no more is spent from the account than allow balance and line of credit. Avoidance of double spending. Limit the number of items/assets that can be transferred in a single transaction.
Enforcing Transaction Limits and Authorization in Blockchain Systems|Limit the number of transactions per user. Limit the total quantity of items/assets that can be sold in a given period. Enforce that an account retains an item/asset for a minimum period of time before it can be further transferred. Authorization. Only the owner of the account who hands over ownership should be allowed to instruct the blockchain to execute a transaction on their behalf.
Securing Data Integrity: Digital Fingerprinting and Hash Functions in Blockchain|In the Blockchain, it is necessary to identify transaction data and possibly any kind of data too unambiguously. This is done with the help of a digital fingerprint. Hash functions accept only one data element as input at a time and create a hash value based on the bits and bytes that make up the data. Hash values can have leading zeros to meet the required length.
Exploring the Properties of Cryptographic Hash Functions in Blockchain|Cryptographic hash functions have the following properties: Quickly create hash values for any type of data: The hash function calculates hash values for all types of data very quickly. Deterministic:  This means that the hash function returns identical hash values for identical input data. Any deviation of the hash values of the data suggests deviations in the input data.
Understanding the Key Properties of Cryptographic Hash Functions in Blockchain Security|Pseudo random:  It is not possible to predict the hash value based on the input data. No reverse engineering of the data: It is impossible to restore the original input data based on the hash value. The hash values say nothing about the content of the input data. Collision-proof: A hash function is called collision-proof when it is very difficult (or impossible) to find two or more different data for which it gives the identical hash value.
Efficient Approaches for Hashing Multiple Data Elements in Blockchain Systems|Hash functions accept only one data element at a time. There is no hash function that accepts multiple independent data at the same time. In reality, however, a single hash value is often needed for a large collection of data. This can be achieved using the following patterns: Independent hashing: means that the hash function is applied to each data element independently. Repeated hashing:  is the repeated application of a hash function to one's own result.
Efficient Strategies for Hashing Multiple Data Elements in Blockchain: Combined, Sequential, and Hierarchical Approaches|Combined hashing: retrieves  a single hash value for more than one data element in one attempt. This is useful when a single hash value is required for a collection of data that is available at any given time. Sequential hashing: is the incremental updating of a hash value when new data arrives. The existing hash value is combined with new data and then passed to the hash function to get the updated hash value. Hierarchical hashing: is the creation of a single hash value for a collection of data. It combines a pair of hash values to form a small hierarchy of hash values with a single value at its top.
Efficient Data Comparison and Change Detection Using Cryptographic Hashing in Blockchain Systems|Hashing is also used to compare data without comparing its content piece by piece. If all cryptographic hash values differ, all the data under consideration is also different. If two or more of the cryptographic hash values are identical, their corresponding input data is also identical.  Comparing hash values is a simple and efficient way to detect changes. if the newly created hash value of certain data and its old value are the same the data hash has not been changed after the old hash value was created.
Ensuring Data Integrity: Detecting Changes Using Collision-Resistant Cryptographic Hash Functions|Detecting data changes is actually a process of comparing data before and after certain events, e.g., after a certain period of time has elapsed, when the data has been stored in a database, retrieved from a database, or sent over a network. Detecting changes to data that should remain unchanged works due to the collision resistance of cryptographic hash functions.
Maintaining Data Integrity with Hash References: Detecting Data Alterations and Ensuring Accuracy|Hash references refer to other data, ensuring that the referenced data has not been altered since the reference was created. In the event that the referenced data has been changed, the reference no longer allows the data to be retrieved. in this case the hash reference is considered incorrect or invalid. The idea of hash reference is to protect its users from retrieving data that has been accidentally altered due to technical errors or intentionally by someone else without informing about it. As a result, an erroneous hash reference is considered an indication that the data has been altered after the hash reference was created.
Ensuring Data Integrity with Concatenation of Hash References: Building Secure Merkle Chains|Concatenation of hash references. Merkle chains. One can store data along with hash references that reference other data, which in turn contain hash references that reference more data, and so on and so forth. If any of the data or hash references are changed after they are created, all subsequent hash references are invalid. Because corrupted hash references serve as evidence that data has been altered after the reference was created.
Chaining Data with Hash References: Building Dynamic Record Structures|Each record contains a hash reference to a different record. Such a structure is useful for storing and linking data that is not completely available at a given time, but arrives step by step continuously. The most recent reference is also known as the head of the chain because it references the currently added record.
Building Chains of Data with Hash References: Sequential Data Integration and Retrieval|The creation of a chain begins with the data element Data 1 and the creation of the hash reference Ref 1. As the first data element, Data 1 does not contain a hash reference. When new data arrives, it is merged with the hash reference that points to Data 1. The hash reference Ref 2 refers to the newly received data and the hash reference Ref 1. The hash reference Ref 3, which refers to Data 3 and the hash reference Ref 2, is generated in a similar way. The hash reference Ref 3 is all you need to access all the data in the chain in reverse order of its arrival.
Merkle Tree: Efficient Grouping and Access of Data through Hash References|Connecting hash references to a tree (also called a Merkle tree) is very useful for grouping many different pieces of data that are available at the same time and making them accessible through a single hash reference.
Building Merkle Trees: Concatenating Hash References for Efficient Data Organization|The process of concatenating to a tree begins with the four transactions data by the boxes at the bottom of the figure.  First, the hash references to the individual transaction data are created (Ref 1 to Ref 4), which are then combined in pairs. Hash references are then generated to the pairs of hash references (Ref 12 and Ref 34). This procedure is repeated until a single hash reference is reached (here referred to as Ref 0).
Using Hash Values and Elaborate Puzzles for Computer Challenges: An Essential Concept in Blockchain|Hash values can also be used to allow computers to challenge other computers with elaborate puzzles. The use of hash values is one of the most important concepts of blockchain. A combination lock is a special lock that requires a unique sequence of numbers to open.  If you do not know the order of the numbers with which the lock can be opened, you can only try to systematically try all possible combinations until you finally reach the clear combination with which the lock opens.
Hash Puzzles: Unlocking the Digital Equivalent of Combination Locks|This procedure is guaranteed to open the lock, but is quite time-consuming. Systematically trying out all possible combinations has nothing to do with knowledge or intellectual thinking. The approach of opening a combination lock in this way is based on hard work. Hash puzzles  or hash puzzles are computer puzzles that can be considered the digital equivalent of the task of opening a combination lock by trying out all sorts of combinations of numbers.
Exploring Hash Puzzles: Elements and Significance in Digital Cryptography|Elements of a hash puzzle are: Predefined data that must remain unchanged. Data that can be freely changed is called nonce. The hash function to apply. Restrictions on the hash value of the combined hashing, also called difficulty level.  Nonce (number that can only be used once)
Solving Hash Puzzles: Trial and Error, Nonce, and Solutions in Digital Cryptography|Hash puzzles can only be solved by trial and error. This also requires guessing a nonce, calculating the hash value of the combined data with the required hash function, and evaluating the resulting hash value based on the restrictions. If the hash value meets all restrictions, the hash puzzle has been solved. Otherwise, you would continue with another nonce until the puzzle is finally solved. The nonce, which in combination with the specified data gives a hash value that meets the constraints, is called a solution. You must always present this particular nonce if you want to claim that you have solved the puzzle.
Solving a Hash Puzzle: Finding a Nonce for a Specific Hash Value|Let's consider a puzzle to illustrate how it works. The shortened hash value of Hello World! is 7F83B165. But what data combined with Hello World! would result in a hash value with three leading zeros? So, the riddle is: Find the nonce, that together with Hello World! results in a hash value starting with three leading zeros. The Nonce 614 solves the puzzle. If the restriction had been to find a hash value with a leading zero, the puzzle would have been solved after just four steps.
Understanding Hash Puzzle Difficulty: The Key to Challenging Computer Systems|The requirement that the hash value meet a certain restriction is the core of the hash puzzle. Therefore, neither the restriction nor its description is arbitrary. Instead, the restriction used by hash puzzles is fixed, allowing computers to challenge other computers with hash puzzles.  In the context of hash puzzles, the restrictions are often referred to as difficulty or level of difficulty.
Decoding Hash Puzzle Difficulty: Unveiling the Significance of Leading Zeros|The difficulty is expressed as a natural number and refers to the number of leading zeros that the hash value must have. So, a difficulty of 1 means that the hash value must have (at least) a leading zero, while a difficulty of 10 means that the hash value must have at least 10 leading zeros. The higher the difficulty level, the more leading zeros are required and the more complicated the hash puzzle.
Proof of Work: Unveiling the Role of Hash Puzzles in Blockchain|Hash puzzles can only be solved by trying them out, which requires a lot of computing power and thus a lot of time and energy. The difficulty level directly affects the average number of attempts required to find a solution, which in turn affects the computing resources or the time required to find the solution. In the context of blockchain, hash puzzles are often   referred to as proof of work because their solution proves that someone has done the work needed to solve it.
Securing Ownership and Exclusivity: Identity and Access Control in Blockchain|The blockchain must uniquely identify participants and assets and ensure that only the rightful owner can access their property. The blockchain is a peer-to-peer system that is open to all. Anyone can connect and provision computing resources or send new transaction data to the system. However, it is not desirable for everyone to access the asset that is assigned to the account managed by the blockchain. An essential feature of private property is its exclusivity. The right to transfer ownership to another account is limited to the owner of the account who hands over ownership.
Public and Private Keys: Ensuring Account Security in Cryptography|The idea of cryptography here is that a public key is used to identify the owner of an account, while access to the account is limited to those people who have the corresponding private key. In cryptography, we use the terms encryption and decryption to protect or remove data. Encrypted data is called encrypted text. What happens if someone tries to decrypt an encrypted text with an incorrect key? The result is a useless pile of numbers, letters, and characters that in no way represent the data that has been encrypted.
Asymmetric Cryptography: The Power of Key Pairs and Message Encryption|Asymmetric cryptography always uses two complementary keys. However, this has a trick: encrypted text created with one of these keys can only be decrypted with the other key and vice versa. Let's say es gives two keys: a yellow and a red key. Together they form the pair of corresponding keys. The original message is encrypted with the yellow key that provides the encrypted text represented in the left blue box.
The Duality of Keys: Flexibility and Limitations in Asymmetric Cryptography|The original message can also be encrypted with the second (red) key, resulting in a different encrypted text displayed in the right blue box. The trick with asymmetric cryptography is that you can't decrypt encrypted text with the key it was created with. The decision as to which key to use for encryption and which to use for decryption is up to  the members. You can change the roles of the keys for each new data element that you want to encrypt. However, you must always have both keys for encryption and decryption.  If you only have one of the keys, the possibilities are limited.
Unveiling the Divide: Encryption and Decryption in Asymmetric Cryptography|You can only create an encrypted text at a time by looking at the key to the data.  However, it cannot be decrypted because the corresponding key is not available.  However, one can decrypt the encrypted text created with the corresponding counterpart. Due to the asymmetric distribution of cryptographic properties, the two keys can be used to separate the group of members who are able to create encrypted text from the one that can decrypt it.
Cryptography in practical use: Private and public keys|In cryptography in practice, there are two keys, the private key and the public key.
Getting Started with Asymmetric Cryptography: Key Creation and Distribution|The first steps that must be taken with any application of asymmetric cryptography are: Create a pair of complementary keys using cryptographic software. One key becomes the public key, the other one becomes the private key. A specific member keeps the private key to himself, that passes the public key to all other members.
Secure Communication: Public-to-Private Key Encryption in Asymmetric Cryptography|There are two general ways to use the key pair that differ in the direction in which the data flows: public to private. private to public. Public to private: Using asymmetric cryptography here is about sending information to the owner of the private key in a secure way. It works because anyone can create text encrypted with the public key, but only the owner of the private key can decrypt that text and read the message.
Verifying Authorship: Private-to-Public Key Decryption in Asymmetric Cryptography|Private to public: The use of asymmetric cryptography in this direction is about proving authorship. It works because anyone can use the public key to decrypt encrypted text created with the corresponding private key. the fact that encrypted text created with the private key can only be decrypted with the appropriate public key serves as proof that the owner of the corresponding private key has encrypted the message.
Utilizing Asymmetric Cryptography in Blockchain: Account Identification and Transaction Authorization|The blockchain uses asymmetric cryptography to achieve two goals: Identify accounts: User accounts are public cryptographic keys. Authorize transactions: The owner of the account that hands over ownership creates an encrypted text with the corresponding private key. This encrypted text can be validated using the appropriate public key. This is the number of the account that hands over ownership.
Digital Signatures in Blockchain: Ensuring Ownership and Secure Transactions|The blockchain must ensure that only the owner of one account can transfer the associated asset to other accounts. The transfer of ownership is based on a digital security measure corresponding to the handwritten signature and serves the same purpose: Identify an account, Instruction of the owner, which relating to the content of the corresponding transaction and Approval of the execution by adding the data to its transaction history.
Digital Signatures: Ensuring Authenticity and Detecting Fraud in Blockchain|Digital signatures use cryptographic hashing and the flow of information from private to public asymmetric cryptography. The digital signature deals with the following three processes: Create Signature. Validate data using the signature. Identify fraud using the signature
Securing Data Transmission with Digital Signatures: An In-depth Look|Suppose you want to send Schmalkalden in an authorized manner. You write Schmalkalden, create the hash value of this text (216B62CD) and encrypt it with your private key. The encrypted text of the hash value of your message is your digital signature. It is unique in two ways: First, the message can be uniquely traced back to you because you created it with your unique private key. Secondly, it is unique in terms of text because it is based on the digital fingerprint of the message. Both the message and the digital signature are combined in one file.
Verifying Message Authenticity with Digital Signatures: A Step-by-Step Process|Anyone can now check if you have authorized this message by using your public key. The process begins with the message (Schmalkalden). The recipient of the message first calculates the hash value of the message himself, which results in the value 216B62CD. The recipient of your message then decrypts the attached, encrypted text (the digital signature) with your public key. This results in a value of 216B62CD, which is the hash value of this version of your message. The comparison of both hash values completes the check.
Digital Signature Verification: Ensuring Message Integrity and Authenticity|Since both hash values are identical, the recipient can correctly conclude that you signed the message because, firstly, they were able to decrypt the signature with your public keys, and secondly, the message body encountered is indeed the one you wanted to send, since the decrypted text is identical to the hash value of the message.
Detecting Message Tampering: Verifying Message Integrity with Digital Signatures|In the same way that you verify the authenticity of the message, you can determine if your message has been modified: The recipient of the message (or anyone who was able to intercept the message) himself creates the hash value of the modified message (Schmalkladen), which gives the value 898272F7. The recipient of your message then decrypts the digital signature with your public key. This results in 216B62CD as the hash value of the version of the message you wanted to send.
Message Integrity Verification: Detecting Unauthorized Modifications using Digital Signature|The comparison of both hash values shows that they are not identical. This indicates that the message is not your message. Therefore, anyone may find that you have not authorized this message.
Authorization of transactions|By signing and verifying transactions, the transfer of ownership in blockchain is authorized.
Digital Signature Generation: Ensuring Secure Transaction Authorization|To create a digital signature for a transaction, the owner of the account transferring ownership performs the following steps: Description of the transaction with all the necessary information such as the account numbers involved and the transfer amount. Creation of the cryptographic hash value of the transaction data. Encryption of the hash value of the transaction data with the account holder's private key. Linking the transaction to the encrypted text created under point 3 as a digital signature.
Digital Signature Verification: Ensuring Secure Transaction Validation|To verify a transaction, the following steps must be performed: Creation of a hash value of the transaction data to be verified with the exception of the signature. Decryption of the digital signature of the transaction in question with the account number to transfer ownership. Comparison of the hash value of step 1 with the value obtained in step 2. If both are identical, the transaction is authorized by the owner of the private key, which corresponds to the account transferring ownership, otherwise it will not be authorized.
Key Elements of Digital Signatures for Transactions|Digital signatures of transactional data consist of the following elements: Cryptographic hash values of transaction data. Encrypted text that can be traced back to the corresponding private key of an account.
Unique Characteristics of Digital Signatures in Public-Private Key Cryptography|Due to the fact that cryptographic hash values can be considered digital fingerprints, they are unique to each transaction. An essential feature of public-private key cryptography is that encrypted  text created with a key can only be decrypted with its corresponding counterpart.  The assignment of both keys is unique. With this property, digital signatures can serve as proof that the owner of the private key used to create the digital signature actually agrees with the content of the transaction.
Preserving Transaction Order and Ensuring Data Integrity in Blockchain|The challenge is to store all transaction data that has ever taken place in such a way that the order in which the transactions took place is preserved and changes to the data are detected quickly and easily. The rapid detection of changes is important to prevent manipulation of the transaction history.
How Blockchain Detects and Prevents Transaction Manipulation through Hash Reference Renewal|How to detect the manipulation of a transaction? Changing data anywhere on the blockchain requires the renewal of all hash references, starting with the one that directly references the manipulated data and ending with the head of the entire blockchain as well as all hash references in between.
The Impact of Transaction Modification on the Validity of the Blockchain|What happens if transaction 2 is changed? This transaction is part of a Merkle tree consisting of various hash references. By changing some properties of transaction 2 (e.B. the quantity of goods transferred or the account receiving ownership), the fingerprint or cryptographic hash value is also changed. As a result, the hash reference Ref TA2, which pointed to the original transaction data, is corrupted. It is noted that the originally stated transaction data has been changed in the meantime. As a result, the entire blockchain is invalid.
The Impact of Hash Reference Changes on the Integrity of the Merkle Tree in a Blockchain|What happens when you change not only details of a transaction, but also the hash reference that points to the updated transaction? The updated hash reference (Ref TA2) is valid because it correctly references the new transaction data. However, the updated hash reference is part of a Merkle tree whose root is also a hash reference. The root of the Merkle tree (Ref TA12) points to a data element that contains the hash references Ref TA1 and Ref TA2.
The Consequences of Hash Reference Modifications on the Integrity of the Merkle Tree in a Blockchain|The latter has been modified to match the manipulated version of Transaction 2. Therefore, the cryptographic hash value of the data containing the updated version of RefTA2 also changes, which in turn invalidates the root of the Merkle (partial) tree (Ref TA12).
The Impact of Transaction Replacement and Hash Reference Changes on the Integrity of the Merkle Tree in Blockchain|Replacing a transaction and its hash references in the Merkle tree invalidates the trunk of the Merkle tree, invalidating the entire data structure. Similar to the example above, the root of the Merkle tree Ref TA12 is invalid due to changes that have occurred within the Merkle tree. Therefore, we find that changing a transaction or replacing a transaction will have the same impact on the blockchain data structure. The manipulation is detected in both cases and invalidates the entire data structure.
The Invalidating Effect of Merkle Structure Changes on Blockchain Data Integrity|Changing a Merkle structure invalidates the hash reference that points to the block header that contains it, which in turn invalidates the entire data structure.
Effects of Hash Reference Replacement on Blockchain Data Integrity|Replacement of an entire subtree and its references. Changing a hash reference within a block header invalidates the hash reference that refers to the edited block header, which in turn invalidates the entire data structure.
How to Ensure Data Integrity when Modifying Transactions in the Blockchain|How to properly replace a transaction? The blockchain takes a radical all-or-nothing approach when it comes to changing its data: either you change the entire data structure completely from the point that causes the change to the head of the entire chain, or you better leave it completely unchanged. Properly modifying a transaction entails changing all subsequent hash references. If we consider changing or updating some details of transaction 2, we will then need to update the entire sequence of hash references: Ref TA2, Ref TA12, Ref Block 1 and Ref Block 2.
The Importance of Maintaining Data Integrity in the Blockchain through Proper Modification Procedures|This means that all hash references, starting with the one that points directly to the edited data, and the hash reference, that points to the last block header, as well as all hash references in between, must be changed and updated so that they correctly reflect the changes. This is a rather complex task. All these changes are necessary to keep the entire blockchain data structure consistent and maintain its integrity. All other attempts to modify or manipulate data result in invalid hash references, which in turn invalidates the entire data structure.
Decentralized Trust and Consensus in Blockchain Applications|Blockchain creates consensus and trust between actors who may not know each other at all. In a blockchain application, actors exchange assets such as money, property, services or certificates without a central authority on the authenticity of the exchange actions. This greatly speeds up the processing of the corresponding transactions and paves the way for a completely new generation of transactional applications, especially if consensus can be reached automatically. Instead of a central authority, all actors in the peer-to-peer network of the blockchain application confirm the authenticity of the exchange actions. This joint confirmation is called consensus.
Automated Consensus Mechanisms in Blockchain: Agreement, Closing, and Validity|Whether a transaction is valid is therefore decided by the majority of actors. However, not all actors are asked for their opinions. The consensus should be reached automatically. There are several mechanisms for designing and implementing an automated consensus. In principle, any actor can propose a transaction that is posted to the ledger. At a certain point in time, however, only one transaction is selected for posting. All honest actors agree on which transaction was selected (agreement), all honest participants finally learn which was the selected transaction (closing) and that the selected transaction was considered valid (validity).
Protective Measures in Blockchain: Accounting for Dishonest Actors and Complexity of Manipulation|The protocol of the accounting takes into account that some actors are honest and follow the protocol, while others are dishonest and deviate from the protocol, as in real life, when many people participate in a common cause. A blockchain is open to any actor. But even if it weren't open to every actor, we can't assume that we can trust everyone in the user community. The protective mechanism that offers itself here is to make any kind of manipulation immensely complex.
Principles of Blockchain Technology: Immutable Transaction History and Computational Intensity|In blockchain technology, this is achieved through three principles: Storage of a transaction history in such a way that even the smallest changes to the history are noticed and noticed. Even inserting the smallest detail forces much of the transaction history to be rewritten. Adding, writing, or rewriting data to the transaction history is extremely computationally intensive.
Immutability and Consensus in Blockchain: Detecting Changes and Reaching Consensus|In the previous chapter, it was explained that any change to a transaction also entails a change in its hash value, which is immediately widely visible to all actors. The all-or-nothing principle of blockchain technology requires that even the smallest changes to transaction data require the redesign of the entire Merkle tree, including all the necessary hash puzzles. This makes every change attempt immensely expensive. In a blockchain, actors must repeatedly be able to reach consensus in order to record a transaction (or series of transactions) on the ledger. Usually, the consensus is organized in discrete rounds, in which the participants start the round r + 1 after the round r comes to a close.
Consensus in Blockchain: Proof-of-Work and Consensus by Difficulty|One could assume that a consensus is reached if the majority of actors agree to the decision to attach a particular transaction to the blockchain. A block would be accepted if 51% of the actors agree with this block. However, this is nonsense, as you can never know exactly how many actors are currently on the net. In the blockchain world, the actor is considered a recognized representative of the majority of all actors, who first solves the hash puzzle with a given level of difficulty, i.e., determines the hash value with the given number of leading zeros.
Ensuring Trust and Security: Challenges in Blockchain Community Entry|The mechanism that the actor who solves the hash puzzle represents the majority and is thus allowed to propose a transaction for posting to the ledger is called Proof of Work (PoW).  An actor has to do elaborate and provable work so that he can propose one or more transactions. Basically, in a blockchain community, the same problem arises as when organizing a street gang: how to ensure that someone who wants to join the gang is not a plainclothes police officer, detective, or just a free rider?
Costly Signaling: Proof of Work in Blockchain Consensus|Here, what sociologists call costly signaling is used as an exam: the candidate has to do something expensive and difficult, such as robbing a shop or getting a gang symbol tattooed. Then he is considered trustworthy. In the blockchain world, costly signaling is commonly referred to as proof of work (PoW). In PoW, consensus is reached by holding a lottery among the players to decide which transaction to append next to the ledger. Buying a lottery ticket is a form of costly signaling because it is expensive: expensive in terms of time and energy expenditure. Especially in the PoW lottery, players compete to solve a puzzle. The first actor to solve the puzzle wins the consensus and selects the next block to attach to the ledger. If this block is valid, this actor will also receive a reward, but the other actors will receive nothing and will have to start a new puzzle. Therefore, the work to solve the riddle is adequately remunerated. This wage is intended to compensate for the energy applied (and the use of special hardware) and also to enable a profit. It consists of the current Block Reward, i.e., the salary for writing a new block into the blockchain, and the agreed transaction fees.
Protocol Criteria for Valid Transaction Sequence: Longest Chain vs. Heaviest Chain|Therefore, the idea arose to define a protocol for determining the valid transaction sequence based on the computational effort. Two criteria can be used for this: The criterion of the longest chain. The criterion of the heaviest chain
Consensus on Initial Blockchain Version: Starting Point for Distributed System Actors|The criterion of the longest chain. The criterion of the longest chain is based on the idea that the blockchain data structure, which includes the most blocks, represents the greater computational effort. Let's look for a starting point in which all actors of a distributed system have agreed on the same version of an existing blockchain:
Consensus on Block Addition: Majority Agreement on Block Order in Blockchain|Each of the boxes represents a block marked with a shortened hash value. The arrow pointing from one box to another represents the hash reference that links a block header to its predecessor. In this initial situation, all actors agree on a history of the transaction data and strive for an extension of the existing chain by another block, which refers to block A397 as its predecessor. If a transaction is now proposed for accounting, a new block is written for the blockchain. The following order is the one that the majority of actors will find once the new block has been added.
Delayed Block Transmission: Minority Actors Catching Up with the wrong block|Due to a delay in the transmission of messages, a minority of actors have not yet received block AB12. Therefore, they are still trying to extend the original chain. In the meantime, an actor proposes a new transaction for accounting. Its new block has a hash value of DD01 and is passed to the other actors. The majority of the actors receive both block AB12 and block DD01 as new blocks.
Blockchain Fork: Divergence of Chains with Equal Lengths Based on Different Predecessors|As a result, the majority of actors have a blockchain, which now consists of two branches on a common trunk. In such a situation, the criterion of the longest chain does not give a clear result, since both chains have the same length. Some actors may try to find a new block that points to block AB12 as its predecessor, while other actors may try to find a new block that points to block DD01 as its predecessor.
Simultaneous Block Validation: Multiple Blocks Extending the Same Predecessor|Suddenly, the majority of actors receive two new blocks, BB11 and CCC1, both of which refer to block AB12 as their predecessor. This can happen when two actors complete the proof of work (or other authorization) for their blocks almost simultaneously.
Multiple Branches in Blockchain: Ambiguity in Longest Chain Criterion|The result of incorporating these two new blocks into the blockchain is a data structure that contains three branches. One of the branches consists of only three blocks, while the other two consist of four blocks. The criterion of the longest chain clearly excludes the shortest chain. However, the criterion of the longest chain does not give a clear result during this, as it gives two chains of the same length. As a result, some actors may try to find a new block that refers to block BB11 as its predecessor, while other actors may try to find a new block that refers to block CCC1 as its predecessor.
Resolution of Conflicting Versions: Longest Chain Criterion Establishes Consensus|Finally, a new block is entered, referring to block BB11 as its predecessor, resulting in the following blockchain. It contains many conflicting versions of the transaction history, but the criterion of the longest chain gives a clear result, namely the chain, which consists of blocks 0101 → BB11 → AB12 → A397 → 33FF. The majority of actors and eventually all actors in the system now use this chain to clarify ownership-related requirements that are mapped in transactions. They strive to expand this branch by finding a new block that points to block 0101 as its predecessor.
Determining Validity: The Heaviest Chain Criterion in Dynamic Difficulty Blockchain|The criterion of the heaviest chain. Blockchain applications rarely use a consistent level of difficulty for the puzzle to be solved when a new block is to be added to the blockchain data structure. Instead, they usually determine the difficulty level dynamically, which distinguishes the blocks in terms of the computational effort spent on adding them to the blockchain.
Weighted Chains: Evaluating Computational Effort in Blockchain with the Criterion of Cumulative Difficulty|The criterion of the longest chain is based on the idea that the path containing the most blocks represents the greatest computational effort. With heterogeneous difficulty levels, however, the longest path is not necessarily the one that represents the greatest computational effort. For each path, the computational effort required for this can be set to add up the difficulty of all associated blocks. This value can be calculated using the fact that the block header contains the difficulty level of its hash puzzle. The cumulative difficulty level of a path is often referred to as its weight.
Heaviest Chain: Selecting Blockchain Paths based on Cumulative Difficulty|The longest chain (the path from root 33FF to leaf 0101) has a weight of 5, while the second longest chain (the path from root to leaf CCC1) has a weight of 6. Blockchains that include the level of difficulty use the criterion of the heaviest  chain, in this case the second chain is chosen.
Selecting a Chain: Consequences and Outcomes|Following the selection of a chain. Selecting a particular chain from conflicting versions and determining it as the authoritative order has the following consequences: Orphaned blocks. Reclaimed renumeration. Clarification of ownership. Preparation of transactions. A growing common tribe. Robustness against manipulation
Orphaned Blocks: Abandoned Paths in the Blockchain Tree|Orphaned blocks. The growing blockchain looks like a tree whose branches reflect different versions of the transaction history. Applying a selection criterion (longest or heaviest chain) actually means selecting a path of that tree and setting it as the authoritative version of the transaction data history. All blocks in the tree-shaped data structure that are not part of the authorized path are abandoned by the actors and called orphaned blocks.
Abandoning Blocks: Selection Criteria in Blockchain Consensus|For example, if the criterion of the longest chain is applied to the situation shown again in the previous slide, the blocks DD01 and CCC1 are not part of the longest chain and are abandoned. If the criterion of the heaviest chain is applied to the last situation shown here again, blocks 0101, BB11 and DD01 are not part of the authorized chain and are therefore abandoned.
Reclaimed Remuneration: Handling Invalid Blocks in Blockchain|Reclaimed renumeration. Orphaned blocks are useless for the transfer of assets because they do not belong to an authorized chain. As a result, the remuneration is reclaimed by the actor who created and submitted it. If a block added to the blockchain is later identified as invalid or unusable, that block, as well as any subsequent blocks, will be logically removed from the blockchain and the compensation awarded for adding it will be reclaimed from the appropriate actor.
Clarification of Ownership: Valid Transactions in the Authorized Chain|Clarification of ownership. It is assumed that only transactions that are part of the authorized chain have taken place. Only they are used to clarify property-related claims. Orphaned blocks are not part of the collectively authorized chain. Therefore, they are treated as if they had never taken place, and they are considered not to have taken place in the settlement of property-related claims.
Processing Orphaned Transactions: Giving Another Chance to Unconfirmed Data|Processing of orphaned transactions. Transaction data that are part of orphaned blocks was originally submitted with the goal of adding it to the transaction history. The fact that they are treated as if they never happened was never planned in advance. Rather, it is the result of the randomness of the proof of work and its role in building the blockchain. Transaction data that unfortunately ended up in orphaned blocks is given another chance to become part of the authorized transaction history by reprocessing it and later adding it to the blockchain.
Ambiguous Common Trunk: Multiple Longest Chains in Blockchain|Ambiguous common trunk. Applying a selection criterion does not always lead to a clear result. For example, in situations like the one in the first two situations above (shown here gaian) , there is more than one longest chain. In these situations, the blockchain has two paths of equal length starting from a common root. The common trunk consists of only two blocks that form a short chain A397 → 33FF. Later, the common trunk already consists of three blocks that form the chain AB12 → A397 → 33FF and contains the common trunk of the previous situation.
Determining the Next Block: Decision-Making in Blockchain|Even if a selection criterion yields ambiguous results, the conflicting, versions of the transaction history result from a less ambiguous common root. The deeper the blockchain, the less ambiguous the decision as to which is the longest chain. Consider the situation where the criterion of the longest chain does not give a clear result: BB11 & CCC1 → AB12 & DD01 → A397 → 33FF. As we see in the next situation, the next block (0101) added to the blockchain determines whether block BB11 or CCC1 is either part of the longest chain or is abandoned instead. But who decides that the next block to be added to the blockchain will reference block BB11 as its predecessor and therefore to abandon block CCC1?
Actor's Decision: Influencing Blockchain Branches|The surprising and perhaps disappointing answer is: coincidence. Actors are free to decide which branch they want to expand. The actor who solves the puzzle of a new block first decides which of the conflicting branches will be expanded and which blocks will be abandoned.
Robustness: Computing Power and Blockchain Security|Robustness against manipulation. The path of the tree-shaped blockchain data structure that represents the greatest computational overhead is the authorized version of the transaction history. Setting up and maintaining the authorized path is just a matter of controlling most of the computing power of the entire system. This fact is the basis for the robustness of the blockchain. As long as honest actors have the most computing resources of the entire system, the path they manage grows the fastest and surpasses all competing paths.
Resistance to Attack: Majority Computing Power in Blockchain Security|To manipulate an inner block, an attacker would have to repeat the proof of the work of that block and then the hash puzzle of all subsequent blocks, and then catch up with and overtake the path maintained by the honest actors.
Robustness Against Manipulation: Majority Computing Power in Blockchain Security|However, it is impossible for any attacker who has less computing power than the majority to take a new path, catching up with and overtaking the path taken by the majority. Therefore, any attempt to set up a new authorized path that contains fraudulent transactions will be overtaken and rejected by the path maintained by the honest majority. As a result, the history of transactions managed by the system is robust against manipulation.
Exploring Design Parameters and Application Perspectives in Blockchain Technology|The smart contract is the essential core of a blockchain. It determines which actors are involved in which transactions and how, and regulates how the transfer of property, information, etc. takes place. This chapter explains some design parameters that should be considered when developing blockchain applications (public versus private blockchain, transparency versus privacy, and a few more). A small case study explains the design of a blockchain application. Application examples and design sketches show how this still young technology is currently being implemented in practice and which application perspectives already exist.
Building Trust and Transparency with Blockchain Technology|A blockchain is a distributed, shared, and digital ledger that records the timing of validated facts. These facts can refer to tangible and intangible objects, to money or simply to information. As part of this digital system of recording, each transaction and its details are validated and then recorded in a network of computers. Anyone who has access to the distributed ledger can view this information. All actors on the network agree on the accuracy of the transaction data before the block is replicated, shared, and synchronized between the distributed locations.
Revolutionizing Trust and Collaboration with Blockchain Technology|At a time when trust is elusive, the appeal of blockchain technology is increasing as it provides a way to confirm, validate, and authenticate values and events. For this reason, vertical (e.g. banking, manufacturing and insurance) and horizontal business lines (departments such as accounting, fulfillment, supply chain and shipping) are linked together via blockchains. As we already know, a blockchain is a type of distributed ledger or ledger that uses encryption techniques for the permanent and forgery-proof recording of transaction data. This data is kept distributed in a peer-to-peer network. Each transaction is checked for validity by means of a consensus. 
Empowering Transactions with Smart Contracts|A smart contract is a computer protocol that determines interactions between actors in any type of blockchain. It sets out the rules and conditions under which a transaction or exchange is considered valid.
Smart Contracts: Beyond Traditional Legal Contracts|From a legal point of view, a smart contract is not necessarily a contract consisting of two corresponding declarations of intent (offer and acceptance of the offer). A smart contract, on the other hand, is merely a software-based protocol that entails other agreed protocol steps when a previously defined condition occurs. Actually, a smart contract is a process for documenting a contract. One of the essential characteristics of smart contracts is the unstoppability of once programmed processes after conditions have occurred.
Public vs Private Blockchain: Choosing the Right Path|Public versus private blockchain. Distinguishing between a public blockchain system (without access permissions) and a private (permissoned) blockchain system (with access authorization), where participants have reliable identities and only verified members of the network can participate, is crucial to designing a blockchain application. Private blockchains are better suited for business applications, especially in regulated industries, such as the financial or energy sectors. They are based on customer knowledge and regulatory requirements. The lack of complicated PoW makes private blockchains less energy-intensive.
Public vs Private Blockchain: Exploring Different Trust Models|Public (permissionless) blockchains (without access permissions)are attractive to applications such as Bitcoin, which are designed to ensure that no one can control who can participate, and that actors want to remain anonymous and may not be anxious to reveal their identity. Bitcoin's PoW was a real innovation that set the entire blockchain technology in motion. Eligible blockchains have evolved as an alternative design of a blockchain between a group of well-known actors. An empowered or private blockchain offers the opportunity to secure interactions between a group of actors who share a common goal but do not fully trust each other.
Identity and Consensus: The Role of Actors in Blockchain Trust Models|A legitimate blockchain relies on the identity of its actors and can therefore use the traditional Byzantine fault-tolerant (BFT) consensus. Permissionless or public blockchains offer a platform for new business models. However, by definition, they are based on a very computationally intensive computational model to ensure transaction integrity.
Clearing House: Mitigating Trust Issues in the Banking Sector|Example from the financial sector: The establishment of the clearing house in the banking sector was created because banks do not fully trust each other, thus reducing the risk of an actor not complying with its conditions between transactions.
Efficient and Secure: Proof-of-Authority (PoA) Consensus Mechanism|For private blockchains, a number of consensus mechanisms have been developed as an alternative to energy-intensive proof-of-work: Proof-of-Authority (PoA): is a consensus mechanism that works more efficiently and maintains BFT. The authorizations for the handling of transactions are assigned by a central authority. This approach is particularly interesting when business processes are determined by government or similar regulations. The central authority is accountable to regulators and therefore has a strong interest in compliance and data security and integrity in the blockchain.
Efficient and Trustworthy: Proof-of-Stake (PoS) and Proof-of-Honesty (PoH) Consensus Mechanisms|Proof-of-Stake (PoS): is a similar approach that does not require mining. The authorizations for transaction handling are assigned randomly. For example, an actor can be randomly selected to process transactions in a 60-second window before randomly selecting a new actor. Proof-of-honesty (PoH): is an approach similar to PoA, but the authority is placed on a small circle of honest actors who assign the permissions to handle transactions among themselves. 
Design Parameters for a Blockchain System: Openness and Distributed Coordination|Design parameters for a blockchain system A blockchain is a purely distributed peer-to-peer system where any actor can read the transaction history and add new transaction data to the collectively managed ledger. The openness and lack of any form of central control and coordination are the basis of the system. They enable the actors on the Internet to act as independent witnesses to clarify property issues.
Technical Limitations of the Blockchain: Privacy, Security, Scalability, Cost, Centralization, Flexibility, Critical Size|Technical limitations of the blockchain. The main technical limitations of the blockchain are: Lack of privacy; The Security Model; Limited scalability; High costs; Hidden centrality; Lack of flexibility; Critical size
Transparency and Privacy in the Blockchain: Balancing Trust and Confidentiality|Lack of privacy. The blockchain is a distributed peer-to-peer ledger that keeps the entire history of transaction data open to anyone who has access to the blockchain. All transaction details such as actor, assets or money that was transferred to what extent and when is visible to all. This is necessary so that each actor can identify an owner beyond doubt and verify new transactions. The lack of privacy is therefore an essential element of the blockchain. Without this level of transparency, the blockchain could not fulfill its duty.
Securing the Blockchain: The Role of Asymmetric Cryptography|The Security Model. The blockchain uses asymmetric cryptography to identify and authenticate actors and authorize transactions. Account numbers on the blockchain are actually public cryptographic keys. Only the person who has the appropriate private key can access the property associated with an account. Only transaction data that contains a digital signature created with the appropriate private key is valid and can transfer ownership from one account to another.
Private Key Security: Safeguarding Blockchain Assets|The private key is the only security tool that authorizes the rightful owner. Once an account's private key is intentionally, accidentally, or leaked to another user due to data theft, the security of that single account is no longer guaranteed. There are no additional security measures in place to protect the property associated with an account number.
Challenges of Scalability in Blockchain Technology|Limited scalability. The blockchain is a peer-to-peer system designed to achieve two goals: First, all users can add new transaction data to the collectively managed history. On the other hand, it ensures that the history of the transaction data is protected against manipulation or falsification. The blockchain balances both goals by using an immutable data structure that contains only attachments and that requires the solution of a hash puzzle every time a new block is added.
Scalability Challenges in Blockchain: Balancing Security and Processing Speed|Solving this puzzle is intentionally time-consuming. Insisting on solving the hash puzzle is one way to make the manipulation of the transaction history unjustifiably complex. Unfortunately, this security measure is accompanied by a reduced processing speed and thus a limited scalability. This property of blockchain is seen as a serious hurdle for use in application areas that require high processing speed, high scalability and high data throughput.
The Cost Factor in Blockchain: Balancing Security and Efficiency|High costs. Solving the hash puzzle is intentionally computationally intensive. It is the security measure that makes the history of transaction data immutable. This proof is expensive. Thus, there are costs for the entire blockchain. The amount of these costs depends on the difficulty of the puzzles.
Unveiling Hidden Centrality in Blockchain: From Democracy to Concentration of Computing Power|Hidden centrality. The need to solve a puzzle for each block added to the blockchain data structure, and the rules for distributing rewards that contribute to the integrity of the system, lead to an arms race between actors in terms of their computing power. The supposedly large and democratic group of actors who together maintain the integrity of the system eventually become a very small group of actors who have enormous computing power, often in the form of specialized hardware.
Hidden Centrality in Blockchain: The Oligopoly Effect on Distributed Systems|The remaining group of actors forms an oligopoly that divides responsibility for maintaining the integrity of the system among themselves. Much like oligopolies in other industries, this small group of actors could abuse their power. This effect creates a kind of hidden centrality that undermines the distributed nature of the entire system. From a technical point of view, such a system is still a distributed system, but it is a system whose integrity is maintained only by a small number of actors.
Navigating the Lack of Flexibility in Blockchain: Challenges and Considerations|Lack of flexibility. The blockchain is a complex technical construct that consists of a variety of concepts and protocols that are optimized and coordinated with each other. Changing the finely tuned ecosystem can be a major challenge.
Critical Size: Ensuring Robustness and Security in Blockchain Networks|Critical size. The robustness against manipulation and thus the trustworthiness of the collectively maintained transaction data history is based on the assumption that the majority of the computing power of the system is controlled by honest actors. However, in small peer-to-peer systems with limited computing power, this majority can still be very small, which in turn could allow a 51 percent attack to be carried out.
Non-Technical Limitations of Blockchain: Legal Recognition and User Acceptance Challenges|Non-technical limitations of the blockchain. The main non-technical limitations of the blockchain are: Lack of legal recognition. Lack of user acceptance
Challenges of Legal Acceptance in Blockchain Transactions|Lack of legal acceptance. Blockchain is a technology that offers its actors the ability to manage and transfer property rights in an open and purely distributed peer-to-peer system. The way independent actors collectively manage property through a distributed consensus has raised questions about the legal consequences of transactions made and managed on the blockchain.
Legal Implications of Blockchain Transactions: Lessons from the Evolution of E-commerce|Questions about the legal implications and acceptance of transactions on the blockchain need to be discussed regardless of security and technical progress. It is the incorporation of a new approach to property management into the established legal system. Those who have witnessed the emergence and development of the Internet may see a similarity between the legal status of today's blockchain and the lack of legal acceptance of e-commerce in the nineties.
Challenges of User Acceptance in Blockchain: Balancing Transparency, Data Protection, Security, and Speed|Lack of user acceptance. Blockchain faces two conflicts: Transparency vs. data protection and Security vs. Speed
Navigating the Trade-Off: Transparency vs. Data Protection in Blockchain|Transparency versus data protection. The blockchain presents the ownership rights based on the entire history of the transaction data, which is open to all. As a result, the blockchain resembles a public trade repository or a public ledger. Being open and transparent is the core concept of blockchain for verifying ownership. This openness is the basis for solving the problem of double spending, since anyone can check the transactions of all the others and thus easily uncover duplicate expenses.
Balancing Act: Navigating the Conflict between Transparency and Data Protection in Blockchain|However, this approach is contrary to the concept of privacy. Privacy means that transactional data, or details of how the accounts involved or the amount transferred, should remain hidden from the public. The resulting conflict consists, on the one hand, in the transparency required to clarify ownership and, on the other hand, in the higher data protection requirements of users.
Striking a Balance: Navigating the Trade-off between Security and Speed in Blockchain|Security versus speed. Without exaggeration, it can be stated that the history of transaction data is the heart of the blockchain. The history of transaction data is protected from manipulation and falsification by storing it in an immutable blockchain data structure. It also requires the solution of a hash puzzle for each block that is added or rewritten. Not only does this make it extraordinarily costly to manipulate or falsifying the history of transaction data, but it also slows down the speed at which new transaction data can be added to the blockchain data structure.
Balancing Security and Scalability: Addressing the Trade-off Between Proof of Work and Transaction Speed in Blockchain.|This is in contrast to the speed and scalability requirements of many applications in a commercial context. Therefore, the resulting conflict exists between securing the history of transactional data based on time-consuming proof of work on the one hand and the requirements for speed and scalability of users on the other.
Choosing Between Transparency and Privacy: Exploring Read Access in Blockchain Systems|Decision on transparency vs. data protection. When you make a decision about the conflict between transparency and privacy, you need to decide who you want to give read access to. If only extreme cases where read access is granted are considered, there are two options: grant read access to everyone or grant read access to only a limited group of actors. · Public blockchains grant all actors read access and the right to create new transactions. · Private blockchains restrict read access and the right to record new transactions to a select group of actors.
Ensuring Data Privacy and Compliance: Separating Personal Data in Blockchain Systems|The exact temporal assignment (time stamp) and the immutability of the transaction data is an important aspect of blockchains. Once stored, data can no longer be changed. This can be a problem if the General Data Protection Regulation gives users the right to be forgotten and all of a user's personal data must be deleted. Any design of a blockchain that is contrary to legal regulations is automatically doomed to failure. In the present case, it makes sense to separate the personal data from the actual transaction data via a link.
Balancing Security and Speed: Exploring Different Approaches to Write Access in Blockchain Systems|Decision about security vs. speed. When you make a decision about the security or speed conflict, you must decide who you want to grant write access to. If only extreme cases where write access is granted are considered, there are two options: grant write access to everyone, but make it computationally intensive by requiring the PoW, or restrict write access to a select group of actors that have been trusted. We can distinguish between the following types of blockchains by granting write access:
Write Access in Blockchain Systems: Exploring Permissionless and Authorized Approaches|Permissionless: blockchains grant write access to everyone. Any user or node can verify transactions and add new blocks to the blockchain data structure. Authorized blockchains grant write access only to a limited group of selected actors: identified as trusted by a registration process. As a result, only the group of actors who have write access can verify transactions and participate in the distributed consensus process.
Challenges in the Supply Chain: Trust and Accountability|Trust in the supply chain. Alice owns a fish restaurant. She has some trouble because recent shipments of frozen fish have been spoiled. Bob, her supplier, denies responsibility and charges Carl, the fisherman.
Enhancing Supply Chain Trust with Blockchain and Byzantine Fault Tolerance|Alice decides it is time to “blockchain” her supply chain. She installs temperature sensors in each frozen fish container. The sensors are connected with the internet. The sensors operate not always correctly. Therefore, Alice wires them to conduct a Byzantine faulttolerant consensus protocol, which uses several rounds ofvoting to ensure temperature readings cannot be distorted by a small number of faulty or corrupted sensors.
Ensuring Data Integrity and Authenticity in Supply Chain with Blockchain-Enabled Sensor Consensus|At regular intervals, the sensors reach consensus on the current temperature. They timestamp the temperature record, and add a hash of the prior record, so that any attempt to tamper with earlier records will be detected when hashes do not match. They sign the record to establish authenticity, and then append the record to Alice’s list of records.
Securing Change of Custody in the Supply Chain with Blockchain-Enabled Transfer Certificates|Each time a frozen fish box is transferred from Carl’s fisher boat to Bob’s truck, Bob and Carl sign a statement agreeing the change of custody. The same happens when Bob delivers the fish to Alice. At each such transfer, the signed change-of-custody certificate is time stamped, the prior record is hashed, and the current record is appended to the list.
Enhancing Accountability and Transparency in the Supply Chain with Blockchain-Enabled Custody Tracking|Alice is happy because she can now pinpoint when a frozen fish container has melted, and who had custody at the time. Bob is happy because he cannot be blamed if the fish box had melted before he picked it up at Carl’s fisher boat. And finally, Carl is similarly protected.
Ensuring Accountability and Consensus in Supply Chain Blockchain with Identity and Access Control|At every stage, Alice’s supply-chain blockchain includes identities and access control. The temperature sensors sign their votes, so voter fraud is impossible. Only Alice, Bob, Carl, and the sensors have permission to write to the record list, so it is possible to hold participants accountable if someone tries to tamper with the ledger. In this distributed data storage, a linked list serves as a ledger and a combination of fault-tolerant Byzantine votes and human signatures serves as a consensus. The principle of ledger plus consensus is essential in blockchains.
Achieving Customer Retention and Capital Generation through Digital Coupon Crowdfunding|Customer retention through coupons. Alice wants to expand her business and to open a new restaurant. She decides to raise her own capital by crowdfunding. She sells digital coupons redeemable for discount meals when the new restaurant opens. Alice hopes that her coupon system will go viral, and soon people from all over the world will be clamoring to buy Alice’s coupons (many with the intention of reselling them at a markup).
Enhancing Coupon Attractiveness and Ownership Security through Cryptocoupons on the Blockchain|Alice decides her coupons will be more attractive if she keeps them on a blockchain as cryptocoupons. Then Alice’s coupons have three components: a private key, a public key, and a ledger entry. Knowledge of the private key confers ownership: anyone who knows that private key can transfer ownership of (“spend”) the coupon. The public key enables proof of ownership: anyone can verify that a message encrypted with the private key came from the coupon’s owner. The ledger conveys value: it establishes the link between the public key and the coupon with an entry saying: “Anyone who knows the secret key matching the following public key owns one cryptocoupon”.
Dividing Coupon Ownership: Splitting Cryptocoupons and Establishing New Ownership Entries on the Blockchain|Suppose Bob owns a coupon, and decides to transfer half of it Carl, and keep the other half for himself. Bob and Carl each generate a pair of private and public keys. Bob creates a new ledger entry with his current public key, his new public key, and Carl’s public key, saying “I, the owner of the private key matching the first public key, do hereby transfer ownership of the corresponding coupon of the owners of the private keys matching the next two public keys.” Spending one of Alice’s cryptocoupons is like breaking a 20€ bill into two 10€ bills: the old coupon is consumed and replaced by two distinct coupons of smaller value.
Crowdsourcing Blockchain Management: Incentivizing Miners with Additional Coupons and Establishing a Peer-to-Peer Network for Data Sharing|Next, Alice must decide how to manage her blockchain. As she does not want to do it herself, she will crowdsource blockchain management by offering additional coupons as a fee to anyone who volunteers to be a miner, that is, to do the work of running a consensus protocol. She sets up a peer-to-peer network (also called gossip network) to allow coupon aficionados to share data.
Gossip Network: Facilitating Coupon Transactions and Consensus Protocols for Block Appending|Customers wishing to buy or sell coupons send their transactions to this gossip network. A group of volunteer miners pick up these transactions, batch them into blocks for efficiency, and collectively execute repeated consensus protocols to append these blocks to the shared ledger, which is itself broadcast over the gossip network. Every miner, and everyone else who cares, keeps a local copy of the ledger, kept more-or-less up-to-date over the gossip network.
Mitigating the Threat of Collusion: Safeguarding Customer Transactions in a Decentralized Coupon Blockchain|Alice is worried now that crooked miners could cheat her customers. Most miners are probably honest, content to collect their fees, but there is still a threat that even a small number of dishonest miners might collude with one another to cheat Alice’s investors.
Challenges of Identifying and Preventing Sybil Attacks in Decentralized Coupon Blockchain Systems|Alice thought to have miners, identified by their IP addresses, vote via the Byzantine fault-tolerant consensus algorithm used in the frozen fish example. However, this idea turns out to be not a good one. Alice’s nemesis, Kate, is skilled in the art of manufacturing fake IP addresses. So, Kate could easily overwhelm any voting scheme simply by flooding the protocol with fake miners who only appear to be independent, but are all under control of Kate.
The Role of Proof of Work in Preventing Sybil Attacks in Coupon Blockchain Systems|In the blockchain world, costly signaling is usually called proof of work (PoW). In PoW, consensus is reached by holding a self-administered lottery among the miners to decide which transaction is appended next to the ledger. Here is the clever part: buying a lottery ticket is a form of costly signaling because, well, it is costly: expensive in terms of time wasted and electricity bills. Kate’s talent for impersonation is useless to her if each of her fake miners must buy an expensive, long shot lottery ticket.
Transforming the Financial Industry: Blockchain's Impact on Traditional Processes|General design aspects. Blockchain technology was initially taken up by the financial industry. Above all, however, new players were pushing into the market. It was also the intention of Bitcoin to establish an alternative to existing processes in banking. Banks carry out intensive account reconciliations for transfers, which are triggered in batch mode at the end of the day. Therefore, a transfer from one customer to another a few days and longer if it is an international transfer. In addition, absurdly high fees are sometimes charged, especially for international money transfers.
Expanding Blockchain Beyond Finance: Applications in Various Industries|With a blockchain in which all financial actors are involved, a money transfer can be executed in seconds, at almost disappearing transaction costs. However, there are other sectors that are also using blockchain in the meantime, such as healthcare, energy, human resources, real estate trading, education and others. A variety of industries could benefit from the use of smart contracts that control supply chains and record the corresponding transactions on a blockchain.
Blockchain Applications in Healthcare, Music, and Automotive Industries|Automating healthcare payment processes using smart contracts can prevent incorrect payments and fraud. The music industry could include the intellectual property of music or videos on the blockchain and then define a smart contract to ensure that royalties are paid when the music is used for commercial purposes. Smart contracts and blockchain could benefit the automotive industry by storing easily accessible information about vehicle maintenance and accident and ownership history.
Smart Contracts for Controlled Microtransactions and Expense Management|Smart contracts can enable microtransactions for different types of billing. For example, they could be used in a digital wallet to control expenses: you can give your son €20 in the digital wallet with the condition that the money cannot be spent on fast food and on cinema tickets only if the screening does not take place in the afternoon, when he should actually do his homework.
Blockchain for Diverse Applications: Economic Inclusion, Copyright Protection, Sharing Economy, and Efficient Transfers|Further application sketches can result from the following parameters: People in Third World countries that do not have an established banking system can participate in the economy with the help of Bitcoin. Protection of copyrights. Development of a sharing economy based on sharing and exchanging goods and services. Improvement of international transfers, which can be made faster and cheaper. Reduce the cost of executing and verifying transactions.
Steps in Designing a Blockchain Application: From Use Case Mapping to Production Rollout|Basically, the following steps should be considered when designing a blockchain application: Description of the essential use cases and their mapping in a technology development plan. Presentation of a proof of concept. Performing tests initially with limited functionality, but which offer a certain user experience. Later, more data and more interaction are underpinned. Complete rollout of the production system.
Challenges of Mining in Blockchain Design: Environmental Impact and Centralization Concerns|When designing a blockchain application, one should consider the disadvantages already mentioned: Mining is ecologically difficult to justify. This process requires a lot of computing power and in the meantime also special hardware. Only those who have this hardware and corresponding computing power can solve hash puzzles quickly enough to suggest transactions for booking and achieve the associated remuneration. This counteracts the democratic nature of the blockchain, according to which all actors should benefit from the mining process as equally as possible if only large mining pools are successful here.
The Trilemma of Consensus: Balancing Security, Scalability, and Decentralization in Blockchain Design|The consensus algorithm contains the so-called trilemma: security, scalability and decentralization. In order to increase scalability and also the processing speed in a blockchain, security must be reduced (transition from PoW to PoS, for example) or decentralization (PoA). Processing speed is a serious problem with blockchains. Bitcoin, for example, creates a throughput of seven transactions per second. Visa's system comes to about 1700 transactions per second with central data storage. This means that blockchains are only accepted if there are no significant differences in performance to central systems.
Trade-offs in Consensus Mechanisms: Exploring Speed, Security, and Centralization in Blockchain Design|PoS makes it possible to get transactions booked at a greater speed than PoW. However, this consensus mechanism is more susceptible to external attacks. PoA also accelerates consensus, but limits the handling of transactions to a select group of actors. Basically, legitimate blockchains offer faster and more efficient processing, but at the expense of the public and democratic nature of the blockchain. At the same time, they are more suitable for use in companies.
Ensuring Data Security and Interoperability in Blockchain Integration|Data security and integrity can be ensured in a variety of ways. Blockchain achieves this through distributed trust among stakeholders. However, if the planned system does not require distributed trust, there is no need to strive for a public blockchain. An open question with blockchain is its integration into the current system landscapes of companies. Thus, the handling of transaction data must not only meet certain legal framework conditions. Blockchains must also be able to deliver data to other applications or user interfaces in the company (keyword: interoperability).
Harnessing the Power of Blockchain for IoT: Enhanced Security and Automated Device Authentication|Application examples and sketches. Blockchain and Internet-of-Things (IoT). Blockchain, the technology that made Bitcoin possible, has received a lot of attention in the IoT world, often because of its role in privacy and security. The potential of blockchain for IoT is greater than just keeping evil actors in the network at bay. Smart contracts in blockchains, for example, can take over the activation of authentication of devices, especially if they are rarely connected, as could be the case, with systems in agriculture that are shut down for large parts of the year.
Leveraging Blockchain for IoT: Trust, Security, and Operational Efficiency|They can recognize the re-registration of long-standing passive network participants as trusted members. Blockchain can support the growth and development of IoT, including fraud management, identity management, authentication, authorization, billing, and audits. The sheer volume dimension of IoT creates new management problems that existing systems have not yet faced. Automating many, if not all, aspects of operations will be crucial, and blockchain is well positioned to take on critical roles here.
Enabling Trust and Compliance in IoT with Blockchain: SLA Management and Device Identity Verification|Many IoT use cases include, for example, the fast communication setup between several business partners. This communication must implement legal and financial actions, regulated in service level agreements (SLAs). By using smart contracts over the blockchain, defined by trusted actors, participants in a system can be sure that objective information is provided and SLAs are continuously monitored. Other use cases for blockchain in the IoT would concern device identity. Is a particular device authorized to act as an actor in the network or has it been noticed in the past by negative behavior.
Ensuring Authenticity and Integrity: Secure Storage of Images and Videos on the Blockchain|Secure storage of images and videos. In a blockchain, images and videos can be stored with time stamps. If they can only be retrieved from there, it would be immediately recognizable if they were later manipulated. The digital fingerprint can be used at any time for unambiguous authentication.
Empowering Local Energy Trading: Blockchain in the Energy Sector|Blockchain in the energy sector. Meanwhile, Siemens and the New York-based start-up LO3 Energy announced a collaboration in the field of microgrids. These are local electrical systems that are intended to serve as more manageable and energy-efficient blocks of the existing electrical distribution system. Their goal is to jointly develop microgrids that enable local energy trading based on blockchain technology. LO3 Energy is currently being supported by Siemens Digital in the development of a blockchainbased microgrid in Brooklyn, New York, the first of its kind in the world.
Advancing the Energy Sector: Blockchain Applications for Congestion Management, Energy Services, Market Registration, and Certification|Another system in the energy sector is currently being promoted by the German Energy Agency(dena). In 2019, she developed various use cases for blockchain applications for the energy sector: Congestion management in electricity distribution networks (e-mobility). Energy services for buildings & industrial processes (maintenance). Registration of attachments in the market master data register (MaStR). Certification of guarantees of origin (traceability of the origin of the energy for customers)
Transforming Energy Operations: Blockchain Applications for Fee Settlement, Supplier Management, Wholesale Trading, P2P Trading, Network Capacity Allocation, Tenant Electricity, and Shared Investments|Settlement of fees and levies. Termination and change of supplier. Over-the-counter electricity wholesale. P2P trading between customers of an electricity supplier. Trading and allocation of network capacities. Tenant electricity (optimization of local resources). Shared investments in the case of external tenant electricity (partial) coverage of the residual electricity purchase by purchasing external energy capacity)
Trusting the Ledger: Blockchain in the Insurance Industry for Secure Payments and Future Insured Events|Insurance industry If an insurance premium (e.g. for liability) is paid to a company, it cannot be guaranteed whether this company will still exist in about 20 years when the insured event occurs. But there is already a payment that is linked to a possible insured event and not to companies. If the payment is made in a public decentralized ledger, we must trust the ledger and not the insurance company.
Enhancing Transparency in Extractive Industries: Blockchain for Accurate Measurement of Oil Evaporation|Extractive industries An oil company could insert sensors into its oil tankers to measure the rate of evaporation as the oil is transported from one country to another. Today, oil companies estimate how much oil will evaporate and how much will arrive at its destination. This amount is recorded in the contract that regulates the transaction before the oil is shipped.
Dynamic Smart Contracts for Real-time Monitoring and Adjustment in Oil Transportation Supply Chains|With sensors inside the oil tank, these uncertainties would be eliminated. Monitors in the tanks measure evaporation, the sensors are connected to smart contracts, the contracts change while the ship is in travel,  describe this dynamic process that takes place in the supply chain and constantly update the economic parameters of the contract. 
Enhancing Efficiency and Transparency in the Asylum and Migration Process through Blockchain Technology|Blockchain in the context of asylum and migration. Blockchain technology enables digital progress while preserving decentralized, organizational structures such as those that exist in the German federal system. In Germany, for example, the asylum process is carried out by the Central Federal Office for Migration and Refugees (BAMF) and other authorities at federal, state and local level. There are several variants in the asylum procedure. The seamless exchange of information is made more difficult by fragmented systems and data storage.
Exploring the Use of Blockchain in the Asylum Process: Balancing Efficiency and Data Privacy|In 2018, the BAMF decided to evaluate the potential of blockchain technology in the context of asylum as part of a proof-of-concept project. A blockchain-based system was designed by a mixed team of science and practice. In addition to the advantages of the blockchain mentioned here, the immutability and transparency of the data in particular pose major challenges with regard to data protection. This is particularly important in the asylum process, in which extremely sensitive data must be stored and processed. The consideration of legal aspects is naturally in the foreground of such a project.
Enhancing Asylum Procedures with Blockchain: Promoting Transparency, Integrity, and Inter-Agency Collaboration|The advantage of a blockchain solution lies in the creation of a uniform information on the status of asylum procedures that crosses the organization. This level of information is visible, comprehensible and cannot be manipulated by all authorities involved and forms the basis for improving process integrity. Smart contracts can also support the management of these processes and enable the establishment of an inter-agency process management system in the future. In addition, a blockchain solution can support decentralized data storage and thus contribute in particular to the data sovereignty of the individual authorities.
Enhancing Traceability in Recyclable Materials Chain Using IoT Sensors and Blockchain|Systems for tracking products in the recyclable materials chain Companies can use IoT sensors and blockchain to show that they meet compliance requirements or customs regulations through the traceability of their products. One of the challenges in compliance is transparency in traceability. Blockchain makes it easier to implement traceability. For example, there is a world health organization guide on good distribution practices for the distribution of pharmaceutical products.
Improving Compliance and Traceability in the Pharmaceutical Supply Chain with IoT and Blockchain|It is aimed at all parties involved, including manufacturers, suppliers, brokers, processors, wholesalers, dealers and transport operators. The document contains a template for best practices at each stage in the distribution of medicinal products. In addition, everyone is entrusted with setting up safe storage locations and distribution practices. IoT offers itself here as a technology for the pharmaceutical industry to the track pharmaceutical products in a supply chain. In Europe, pharmaceutical companies need to vigorously address compliance issues due to an EU falsified medicines directive to prevent falsified medicines from entering legal supply chains in European markets.
Streamlining Compliance and Tracking in Supply Chains with Blockchain Technology|Companies can use a blockchain for tracking systems to ensure compliance. Blockchain provides a system for capturing supply chain data that can be shared both securely and transparently with all actors involved in the supply chain, reducing administrative costs and processing times. In this way, customs could verify the shipping data of an entire supply chain. Any efforts to manipulate the broadcast would be verifiable. Items in supply chains already have barcodes, so capturing items after they've been placed on a global blockchain for IoT tracking isn't a huge leap.
Enhancing Customs Compliance and Traceability with Blockchain Technology|Exporters can upload documents to a customs blockchain to show that they comply with national import regulations, such as hygiene or phytosanitary regulations. Blockchain provides secure tracking of the exact locations of goods and accurate shipment content information to determine precise customs tariffs. Blockchain for tracing in the value chain could also help reduce the control effort at customs. However, there are still no successful implementations.
Streamlining Customs Border Trade with Blockchain: Enhancing Efficiency and Transparency|Paper-based systems tend to be less suitable for tracking. The blockchain's immutable, robust records, secure mapping at the time of creation, and the use of smart contracts can make monitoring customs border trade more efficient and transparent. Information about goods such as customs declarations, proof of origin and purchase or loading lists can become part of an accessible block for suppliers, transporters, buyers, regulators and auditors. Increased transparency of the use of blockchain in traceability leads to lower transaction, audit and accounting costs.
Improving Efficiency in Recruiting with Blockchain: Validating Facts and Enhancing Trust|Human resource management. Could a blockchain increase the efficiency of recruiting due to its ability to validate facts and transactions? Blockchains could store details of one's own educational or professional experience and important personal facts that are immutable in certificate registers. Costs associated with repeated checks of the same information could be significantly reduced and confidence in the search increased, provided that the original input was correct.
Harnessing the Potential of Blockchain in Education and Recruitment|Education has also changed drastically in recent years and is now much more difficult to track and validate. Candidates may have worked for multiple employers, gaining skills, knowledge, and experience in the process. You can also have completed online training and earned certificates there. Because people and their backgrounds can be so complicated, the use of blockchain in the recruitment process has some interesting elements.
Revolutionizing Resume Validation: Blockchain's Role in Verifying Education and Employment History|For the blockchain to undeniably reflect a resume or employment history, the question of who brings the data into each block and who verifies the data is crucial. In some use cases, such as review of financial statements, the answers to these questions are relatively simple. Schools and universities could already make data blocks available to their students in which information on the respective educational path and the achievements achieved are documented. In a blockchain world, the transcripts, certificates, and testimonials would be tamper-proof and basically signed by the issuing institution.
Streamlining Verification Processes: Blockchain's Cost-Effective Solution for Validating Education and Employment Credentials|Another big advantage is the cost reduction. Time for checking the evidence of applicants from foreign universities and schools themselves is very time-consuming. A blockchain registration for the validation of  institutions would greatly contribute to the reduction of this time-consuming verification. HR departments would want this secure information in blockchain form to combat fraud and also to reduce the cost of verification.
Enhancing Transparency and Efficiency in Education and Employment: Leveraging Blockchain for Global Workforce Mobility|Blockchains could be helpful in making educational information more transparent and making it accessible to businesses and organizations that might need that information in the future. In addition, a blockchain could also track an employee from job to job and provide that employee with a fast and reliable means to have education and work records at hand and forward faster. The trusted security of the blockchain can additionally help employers and employees when it comes to international recruiting, where it becomes necessary to apply for the right work permits and realize secure payments abroad.
Empowering Workforce Management with Smart Contracts: Enhancing Payroll, Benefits, and Performance Incentives|Working hours, goals achieved, and the resulting wages and salaries due and paid are useful records for both the employer and the employee, and a record of the employer's appreciation could also be a plus for future employment opportunities. Once candidates are hired, smart contracts could also directly impact employee wages, benefits, and pension packages. For example, any bonus based on achieving a specific goal could be coded and automatically requested through a smart contract.
Exploring Blockchain's Potential in Education and Training Documentation for HR Management|While most experts agree that blockchain will eventually be used by human resources for hiring and administrative purposes, the use of blockchains is not yet in sight here. In contrast to financial applications, recruitment, CVs or job histories do not yet have use cases that credibly demonstrate trustworthy use in the management of histories. This means that the use of blockchain technology will initially be limited to the review and documentation of education and training.